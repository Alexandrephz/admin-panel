spring:
  application:
    name: ai-shirts-admin
  datasource:
    url: jdbc:postgresql://localhost:5432/ai-shirts-admin
    username: postgres
    password: Teste@12
#    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
#    username: ${DB_USERNAME}
#    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    show-sql: false
  flyway:
    enabled: true
    baseline-on-migrate: true
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${AWS_COGNITO_ISSUER_URI}

server:
  port: 8080
  servlet:
    context-path: /api

aws:
  region: ${AWS_REGION}
  s3:
    bucket:
      raw-images: ${AWS_S3_RAW_IMAGES_BUCKET}
      selected-products: ${AWS_S3_SELECTED_PRODUCTS_BUCKET}
      archived-designs: ${AWS_S3_ARCHIVED_DESIGNS_BUCKET}
  cognito:
    client-id: ${AWS_COGNITO_CLIENT_ID}
    client-secret: ${AWS_COGNITO_CLIENT_SECRET}
    pool-id: ${AWS_COGNITO_POOL_ID}

ai:
  services:
    openai:
      api-key: ${OPENAI_API_KEY}
      base-url: https://api.openai.com/v1
    leonardo:
      api-key: ${LEONARDO_API_KEY}
      base-url: https://cloud.leonardo.ai/api/rest/v1
    firefly:
      api-key: ${ADOBE_FIREFLY_API_KEY}
      base-url: https://firefly-api.adobe.io/v2

shopify:
  shop-name: ${SHOPIFY_SHOP_NAME}
  access-token: ${SHOPIFY_ACCESS_TOKEN}
  api-version: 2023-10
  base-url: https://${SHOPIFY_SHOP_NAME}.myshopify.com/admin/api/${shopify.api-version}

# Scheduling configuration
scheduling:
  enabled: true
  generation-cron: "0 0 9 ? * WED" # Every Wednesday at 9 AM
  shopify-upload-cron: "0 0 9 ? * FRI" # Every Friday at 9 AM

# Logging
logging:
  level:
    com.aishirts: INFO
    org.springframework.web: INFO
    org.hibernate: ERROR